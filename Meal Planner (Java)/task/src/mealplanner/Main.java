package mealplanner;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Scanner;

public class Main {
  public static void main(String[] args) throws SQLException {
    Scanner scanner = new Scanner(System.in);
    Connection connection = getConnection();
    MealStorage.setConnection(connection);

    CommandPrompt prompt = new CommandPrompt(scanner);

    while (!prompt.getCommand().execute()) {
    }

    connection.close();
  }

  private static Connection getConnection() throws SQLException {
    String DB_URL = "jdbc:postgresql:meals_db";
    String USER = "postgres";
    String PASS = "1111";

    Connection connection = DriverManager.getConnection(DB_URL, USER, PASS);
    connection.setAutoCommit(true);

    createTables(connection);

    return connection;
  }

  private static void createTables(Connection connection) {
    try (Statement statement = connection.createStatement()) {
      String createTableQuery = """
              CREATE TABLE IF NOT EXISTS meals (
                  meal_id  INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                  category VARCHAR,
                  meal     VARCHAR
              )
              """;
        statement.executeUpdate(createTableQuery);
    } catch (SQLException e) {
        throw new RuntimeException(e);
    }

    try (Statement statement = connection.createStatement()) {
      String createTableQuery = """
              CREATE TABLE IF NOT EXISTS ingredients (
                  ingredient_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                  ingredient    VARCHAR,
                  meal_id       INTEGER,
                  FOREIGN KEY (meal_id) REFERENCES meals(meal_id)
              )
              """;
      statement.executeUpdate(createTableQuery);
    } catch (SQLException e) {
      throw new RuntimeException(e);
    }

    try (Statement statement = connection.createStatement()) {
      String createTableQuery = """
              CREATE TABLE IF NOT EXISTS plan (
                  weekday       VARCHAR,
                  category      VARCHAR,
                  meal_id       INTEGER,
                  FOREIGN KEY (meal_id) REFERENCES meals(meal_id)
              )
              """;
      statement.executeUpdate(createTableQuery);
    } catch (SQLException e) {
      throw new RuntimeException(e);
    }
  }
}